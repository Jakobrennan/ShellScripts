#!/usr/bin/env bash
# validates input, to allow negative values

validint() {
    # Validate first field and test that value against min value $2 and/or
    #   max value $3 if they are supplied. If the value isn't within range
    #   or it's not composed of just digits, fail.

    number="$1";   min="$2";   max="$3";

    if [[ -z $number ]]; then
        echo "you didn't enter anything, please enter a number" >&2
        return 1
    fi

    # is the rist character a '-'
    if [[ "${number%${number#?}}" = "-" ]]; then
        testvalue="${number#?}" #grab all but first char
    else
        testvalue="$number"
    fi

    #create version of the number that has no digits for testing
    nodigits="$(echo $testvalue | sed 's/[[:digit:]]//g')"

    #check for nondigit characters
    if [[ ! -z $nodigits ]]; then
        echo "invalid number format! only digits, no commas, spaces, etc" >&2
        return 1
    fi

    if [[ ! -z $min ]]; then
        if [[ "$number" -lt "$min" ]]; then
            echo "your value is too small: smallest acceptable value is $min" >&2
            return 1
        fi
    fi
    if [[ ! -z $max ]]; then
        if [[ "$number" -gt "$max" ]]; then
            echo "your value is too big: largest acceptable value is $max"
            return 1
        fi
    fi
    return 0
}

# =============== Code added to run indapendantly, remove if added to lib ================

# if validint "$1" "$2" "$3" ; then
#   echo "Input is a valid integer within your constraints"
# fi
